#+TITLE:   SHRFACE
#+DATE:    April 11, 2020
#+SINCE:   {replace with next tagged release version}
#+STARTUP: inlineimages nofold

* Table of Contents :TOC_3:noexport:
- [[#description][Description]]
  - [[#screenshots-when-using-eww][Screenshots when using =eww=]]
  - [[#screenshots-when-using-dash-docs][Screenshots when using =dash-docs=]]
  - [[#screenshots-when-using-novel][Screenshots when using =nov.el=]]
  - [[#screenshots-when-using-mu4e][Screenshots when using =mu4e=]]
- [[#installation][Installation]]
  - [[#ues-package][ues-package]]
  - [[#doom-emacs][Doom Emacs]]
  - [[#spacemacs-or-other-emacs-distributions][Spacemacs or other emacs distributions]]
- [[#prerequisites][Prerequisites]]
- [[#configuration][Configuration]]
  - [[#general-setting-for-eww-dash-docs-mu4e-novel-etc][General Setting for =eww=, =dash-docs=, =mu4e=, =nov.el= etc]]
  - [[#specific-settinghacking-for-novel][Specific setting/hacking for =nov.el=]]
  - [[#default-heading-bullets-h1-to-h6][Default heading bullets (h1 to h6)]]
  - [[#default-paragraph-indentation-and-fill-column][Default paragraph indentation and fill column]]
  - [[#supported-faces][Supported faces]]
  - [[#optional-enable-source-codes-highlight][(Optional) Enable source codes highlight]]
    - [[#hacking-the-shr-tag-pre-highlightel][Hacking the =shr-tag-pre-highlight.el=]]

* Description
It is a shr faces package. Org Like faces for shr, dash-docs, eww, nov.el and more!

+ Configurable org-like heading faces, heading bullets, paragraph indentation,
  fill-column and more.
+ Browse the internet with [[https://www.gnu.org/software/emacs/manual/html_mono/eww.html][eww]] just like org mode.
+ Read dash docsets with[[https://github.com/dash-docs-el/dash-docs][ dash-docs]]  and the beauty of org faces.
+ Read epub files with [[https://github.com/wasamasa/nov.el][nov.el]] , just like org mode.
+ Read html email with [[https://github.com/djcb/mu][mu/mu4e]] , the same reading experience just like org mode
  without formatting html to org file.

** Screenshots when using =eww=
  #+html: <p align="center"><img src="img/eww-1.png" width="80%"/></p>
  #+html: <p align="center"><img src="img/eww-2.png" width="80%"/></p>

** Screenshots when using =dash-docs=
  #+html: <p align="center"><img src="img/dash-doc-1.png" width="80%"/></p>
  #+html: <p align="center"><img src="img/dash-doc-2.png" width="80%"/></p>

** Screenshots when using =nov.el=
  #+html: <p align="center"><img src="img/epub-1.png" width="80%"/></p>
  #+html: <p align="center"><img src="img/epub-2.png" width="80%"/></p>

** Screenshots when using =mu4e=
  #+html: <p align="center"><img src="img/mu4e.png" width="80%"/></p>


* Installation
Choose one of the following installation methods based on your needs:

** ues-package

#+BEGIN_SRC emacs-lisp
(use-package shrface
  :after shr
  :quelpa
  (shrface :repo "chenyanming/shrface" :fetcher github))
#+END_SRC

** Doom Emacs
Add the following line to =package.el=
#+BEGIN_SRC emacs-lisp
(package! shrface :recipe (:host github :repo "chenyanming/shrface"))
#+END_SRC

Run =./.emacs.d/bin/doom sync=

** Spacemacs or other emacs distributions
Put =shrface.el= to your load-path. Here is example of ~spacemacs~

#+BEGIN_SRC sh
git clone git@github.com:chenyanming/shrface.git ~/.emacs.d/private/shrface
#+END_SRC

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path (expand-file-name "~/.emacs.d/private/shrface"))
(require 'shrface)
#+END_SRC

* Prerequisites
This package uses =shr=, =org-faces=, and =org-bullets=

* Configuration

** General Setting for =eww=, =dash-docs=, =mu4e=, =nov.el= etc
Normally, just require the package, and you can make use of all benefits brought
by the package:
#+BEGIN_SRC emacs-lisp
(require 'shrface)
#+END_SRC

** Specific setting/hacking for =nov.el=
If you read epub files using [[https://github.com/wasamasa/nov.el][nov.el]], you can add two more lines into your =init.el=
#+BEGIN_SRC emacs-lisp
(with-eval-after-load 'nov
  (setq nov-shr-rendering-functions (append nov-shr-rendering-functions shr-external-rendering-functions)))
#+END_SRC

** Default heading bullets (h1 to h6)
You can configure your farourite bullets for 6 levels of headings.

You can set it with:
#+BEGIN_SRC emacs-lisp
(setq shrface-bullets-bullet-list '("◉" "○" "●" "✿" "◆" "◉"))
#+END_SRC

PS: The default setting is derived from  =org-bullets-bullet-list=.

** Default paragraph indentation and fill column
You can configure the paragraph indentation and fill column for better reading experience

You can set them with:
#+BEGIN_SRC emacs-lisp
(setq shrface-paragraph-indentation 2)
(setq shrface-paragraph-fill-column 120)
#+END_SRC

PS: The default setting is already 2 and 120

TODO: =shrface-paragraph-indentation= has bug, currently disabled for further study.

** Supported faces
Here are the faces supported:
#+BEGIN_SRC emacs-lisp
(defvar shrface-bullets-bullet-list '("◉" "○" "●" "✿" "◆" "◉")
  "Bullets for headings")

(defvar shrface-href-face 'shrface-href-face
  "Face name to use for href.")

(defface shrface-href-face '((t :inherit org-link))
  "Face used for href"
  :group 'shrface-faces)

(defface shrface-h1-face '((t :inherit org-level-1))
  "Face used for h1 headlines."
  :group 'shrface-faces)

(defface shrface-h2-face '((t :inherit org-level-2))
  "Face used for h2 headlines."
  :group 'shrface-faces)

(defface shrface-h3-face '((t :inherit org-level-3))
  "Face used for h3 headlines."
  :group 'shrface-faces)

(defface shrface-h4-face  '((t :inherit org-level-4))
  "Face used for h4 headlines."
  :group 'shrface-faces)

(defface shrface-h5-face  '((t :inherit org-level-5))
  "Face used for h5 headlines."
  :group 'shrface-faces)

(defface shrface-h6-face '((t :inherit org-level-6))
  "Face used for h6 headlines."
  :group 'shrface-faces)

(defface shrface-highlight
  '(
    (((class color) (min-colors 88) (background light))
     :background "darkseagreen2")
    (((class color) (min-colors 88) (background dark))
     :background "darkolivegreen")
    (((class color) (min-colors 16) (background light))
     :background "darkseagreen2")
    (((class color) (min-colors 16) (background dark))
     :background "darkolivegreen")
    (((class color) (min-colors 8))
     :background "green" :foreground "black")
    (t :inverse-video t)
    )
  "Face for highlighting."
  :group 'shrface-faces)

#+END_SRC

** (Optional) Enable source codes highlight
You can install [[https://github.com/xuchunyang/shr-tag-pre-highlight.el][shr-tag-pre-highlight.el]] to enable source codes highlight

#+BEGIN_SRC emacs-lisp
(use-package shr-tag-pre-highlight
  :ensure t
  :after shr
  :config
  (add-to-list 'shr-external-rendering-functions
               '(pre . shr-tag-pre-highlight))
  (when (version< emacs-version "26")
    (with-eval-after-load 'eww
      (advice-add 'eww-display-html :around
                  'eww-display-html--override-shr-external-rendering-functions))))
#+END_SRC

*** Hacking the =shr-tag-pre-highlight.el=

If you want to add indentation and =#+BEGIN_SRC lang=, and =#+END_SRC= for later easy copying to
org-files, you can overwrite the function as following:


#+BEGIN_SRC emacs-lisp
  (require 'shr-tag-pre-highlight)
  (add-to-list 'shr-external-rendering-functions '(pre . shrface-shr-tag-pre-highlight))
  (defun shrface-shr-tag-pre-highlight (pre)
    "Highlighting code in PRE."
    (let* ((shr-folding-mode 'none)
           (shr-current-font 'default)
           (code (with-temp-buffer
                   (shr-generic pre)
                   (setq-local fill-column 120)
                   (indent-rigidly (point-min) (point-max) 2)
                   ;; (fill-region (point-min) (point-max) nil nil nil)
                   (buffer-string)))
           (lang (or (shr-tag-pre-highlight-guess-language-attr pre)
                     (let ((sym (language-detection-string code)))
                       (and sym (symbol-name sym)))))
           (mode (and lang
                      (shr-tag-pre-highlight--get-lang-mode lang))))
      (shr-ensure-newline)
      (insert "  ") ; indentation
      (insert (propertize (concat "#+BEGIN_SRC" lang) 'face 'org-block-begin-line)) ; delete "lang" of this line, if you found the wrong detected langugage is annoying
      (shr-ensure-newline)
      (insert
       (or (and (fboundp mode)
                (with-demoted-errors "Error while fontifying: %S"
                  (shr-tag-pre-highlight-fontify code mode)))
           code))
      (shr-ensure-newline)
      (insert "  ") ; indentation
      (insert (propertize "#+END_SRC" 'face 'org-block-end-line ) )
      (shr-ensure-newline)))
#+END_SRC


Since the package has not been updated a while, sometimes a wrong language is
detected, but it is still great for highlight, even just for eye pleasing.

If you found the wrong detection is annoying, delete =lang= just like below statement:

#+BEGIN_SRC emacs-lisp
(insert (propertize (concat "#+BEGIN_SRC" ) 'face 'org-block-begin-line)) ; delete "lang" of this line, if you found the wrong detected langugage is annoying
#+END_SRC
