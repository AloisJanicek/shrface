#+TITLE:   SHRFACE
#+DATE:    April 17, 2020
#+SINCE:   {replace with next tagged release version}
#+STARTUP: inlineimages nofold

* Table of Contents :TOC_3:noexport:
- [[#description][Description]]
  - [[#screenshots-when-using-eww][Screenshots when using =eww=]]
  - [[#screenshots-when-using-dash-docs][Screenshots when using =dash-docs=]]
    - [[#version-13-new-face-shrface-code-unleash-the-full-power-of-dash-docs][Version 1.3: New face =shrface-code=, unleash the full power of =dash-docs=]]
  - [[#screenshots-when-using-novel][Screenshots when using =nov.el=]]
  - [[#screenshots-when-using-mu4e][Screenshots when using =mu4e=]]
  - [[#screenshots-when-using-imenu-list-helm-imenu-counsel-imenu][Screenshots when using =imenu-list=, =helm-imenu=, =counsel-imenu=]]
    - [[#version-14-new-feature-imenu-support][Version 1.4: New feature, =imenu= support]]
  - [[#screenshots-with-outline-minior-mode-and-org-indent-mode][Screenshots with =outline minior mode= and =org-indent-mode=]]
    - [[#version-15-new-feature-outline-minior-mode-support-use-org-cycle-and-org-shifttab][Version 1.5: New feature, =outline minior mode= support (use =org-cycle= and =org-shifttab=)]]
- [[#prerequisites][Prerequisites]]
- [[#installation][Installation]]
  - [[#ues-package][ues-package]]
  - [[#doom-emacs][Doom Emacs]]
  - [[#spacemacs-or-other-emacs-distributions][Spacemacs or other emacs distributions]]
- [[#configuration][Configuration]]
  - [[#general-setting-for-eww-dash-docs-mu4e-novel-etc][General Setting for =eww=, =dash-docs=, =mu4e=, =nov.el= etc]]
  - [[#specific-settinghacking-for-novel][Specific setting/hacking for =nov.el=]]
  - [[#keybinding-settings][Keybinding Settings]]
    - [[#spacemacs][Spacemacs]]
    - [[#doom-emacs-1][Doom emacs]]
    - [[#other-emacs][Other emacs]]
  - [[#headline-bullets-h1-to-h6][Headline bullets (h1 to h6)]]
  - [[#item-bullet][Item bullet]]
  - [[#paragraph-indentation-and-fill-column][Paragraph indentation and fill column]]
  - [[#supported-faces][Supported faces]]
  - [[#experimental-faces][Experimental face(s)]]
    - [[#enable-the-shrface-code][Enable the =shrface-code=]]
    - [[#important-notes-on-experimental-faces][Important notes on experimental faces]]
  - [[#optional-enable-source-codes-highlight][(Optional) Enable source codes highlight]]
    - [[#hacking-the-shr-tag-pre-highlightel][Hacking the =shr-tag-pre-highlight.el=]]
- [[#todo][TODO]]
- [[#newslogs][News/Logs]]
  - [[#2020-04-17][=2020-04-17=]]
  - [[#2020-04-16][=2020-04-16=]]
  - [[#2020-04-15][=2020-04-15=]]
  - [[#2020-04-13][=2020-04-13=]]
  - [[#2020-04-12][=2020-04-12=]]
  - [[#2020-04-11][=2020-04-11=]]
  - [[#2020-04-10][=2020-04-10=]]

* Description
It is a shr faces package that helps you apply your favourite org faces to =shr=,
=dash-docs=, =eww=, =nov.el=, =mu4e=, and more!

+ Configurable org-like heading faces, headline bullets, paragraph indentation,
  fill-column, item bullet and more.
+ Browse the internet with [[https://www.gnu.org/software/emacs/manual/html_mono/eww.html][eww]] just like org mode.
+ Read dash docsets with[[https://github.com/dash-docs-el/dash-docs][ dash-docs]]  and the beauty of org faces.
+ Read epub files with [[https://github.com/wasamasa/nov.el][nov.el]] , just like org mode.
+ Read html email with [[https://github.com/djcb/mu][mu/mu4e]] , the same reading experience just like org mode
  without formatting html to org file.
+ Switch/jump the headlines just like org-mode in [[https://www.gnu.org/software/emacs/manual/html_mono/eww.html][eww]] and [[https://github.com/wasamasa/nov.el][nov.el]] with =imenu=
+ Togle/cycle the headlines just like org-mode in [[https://www.gnu.org/software/emacs/manual/html_mono/eww.html][eww]] and [[https://github.com/wasamasa/nov.el][nov.el]] with [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Outline-Mode.html][outline minor mode]]
  and =org-cycle/org-shifttab=
+ Enable indentation just like org-mode in [[https://www.gnu.org/software/emacs/manual/html_mono/eww.html][eww]] and [[https://github.com/wasamasa/nov.el][nov.el]] with =org-indent-mode=

** Screenshots when using =eww=
  #+html: <p align="center"><img src="img/eww-1.png" width="60%"/></p>
  #+html: <p align="center"><img src="img/eww-2.png" width="60%"/></p>

** Screenshots when using =dash-docs=
  #+html: <p align="center"><img src="img/dash-doc-1.png" width="60%"/></p>
  #+html: <p align="center"><img src="img/dash-doc-2.png" width="60%"/></p>

*** Version 1.3: New face =shrface-code=, unleash the full power of =dash-docs=
  #+html: <p align="center"><img src="img/dash-docs-code.png" width="60%"/></p>

** Screenshots when using =nov.el=
  #+html: <p align="center"><img src="img/epub-1.png" width="60%"/></p>
  #+html: <p align="center"><img src="img/epub-2.png" width="60%"/></p>

** Screenshots when using =mu4e=
  #+html: <p align="center"><img src="img/mu4e.png" width="60%"/></p>

** Screenshots when using =imenu-list=, =helm-imenu=, =counsel-imenu=
*** Version 1.4: New feature, =imenu= support
  #+html: <p align="center"><img src="img/imenu-1.png" width="60%"/></p>
  #+html: <p align="center"><img src="img/imenu-2.png" width="60%"/></p>
  #+html: <p align="center"><img src="img/imenu-3.png" width="60%"/></p>
  #+html: <p align="center"><img src="img/imenu-4.png" width="60%"/></p>

** Screenshots with =outline minior mode= and =org-indent-mode=
*** Version 1.5: New feature, =outline minior mode= support (use =org-cycle= and =org-shifttab=)
  #+html: <p align="center"><img src="img/indent-1.png" width="50%"/></p>
  #+html: <p align="center"><img src="img/indent-2.png" width="50%"/></p>

* Prerequisites
This package uses =shr=, =org=, =imenu=, =outline=

* Installation
Choose one of the following installation methods based on your needs:

** ues-package

#+BEGIN_SRC emacs-lisp
(use-package shrface
  :after shr
  :quelpa
  (shrface :repo "chenyanming/shrface" :fetcher github))
#+END_SRC

** Doom Emacs
Add the following line to =package.el=
#+BEGIN_SRC emacs-lisp
(package! shrface :recipe (:host github :repo "chenyanming/shrface"))
#+END_SRC

Run =./.emacs.d/bin/doom sync=

** Spacemacs or other emacs distributions
Put =shrface.el= to your load-path. Here is example of ~spacemacs~

#+BEGIN_SRC sh
git clone git@github.com:chenyanming/shrface.git ~/.emacs.d/private/shrface
#+END_SRC

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path (expand-file-name "~/.emacs.d/private/shrface"))
(require 'shrface)
#+END_SRC

* Configuration

** General Setting for =eww=, =dash-docs=, =mu4e=, =nov.el= etc
Normally, just require the package, and you can make use of all benefits brought
by the package expect the experimental features:

#+BEGIN_SRC emacs-lisp
(require 'shrface)
#+END_SRC

Check the experimental faces setup guide here:
#+html: <a href="#experimental-faces">Experimental faces</a>

This package supports =imenu=, =outline minior mode=, and =org-indent-mode=. All are
enable by default (Maybe change to configurable in the future). However, no
default keybindings provided.

Follow the following guide to setup the keybindings.
#+html: <a href="#keybinding-settings">Keybinding Settings</a>

** Specific setting/hacking for =nov.el=
If you read epub files using [[https://github.com/wasamasa/nov.el][nov.el]], you can add two more lines into your =init.el=
#+BEGIN_SRC emacs-lisp
(with-eval-after-load 'nov
  (setq nov-shr-rendering-functions (append nov-shr-rendering-functions shr-external-rendering-functions)))
#+END_SRC

** Keybinding Settings
You can set the keybinding directly with the original org outline related
functions, like =org-cycle=, =org-shifttab=, =org-content=, =org-overview=, etc, and
most of =outline= minior mode functions (prefix with =outline-=) after testing.

Here are examples:

*** Spacemacs
#+BEGIN_SRC emacs-lisp
(with-eval-after-load' nov
  (evil-define-key 'normal nov-mode-map
    (kbd "TAB") 'org-cycle
    (kbd "S-<tab>") 'org-shifttab))

(with-eval-after-load' eww
  (evil-define-key 'normal eww-mode-map
    (kbd "TAB") 'org-cycle
    (kbd "S-<tab>") 'org-shifttab))

#+END_SRC

*** Doom emacs
#+BEGIN_SRC emacs-lisp
  (map! :map nov-mode-map
        :after nov
        :n "<tab>" 'org-cycle
        :n "S-<tab>" 'org-shifttab)

  (map! :map eww-mode-map
        :after eww
        :n "<tab>" 'org-cycle
        :n "S-<tab>" 'org-shifttab)
#+END_SRC

*** Other emacs
#+BEGIN_SRC emacs-lisp
(with-eval-after-load' nov
  (define-key nov-mode-map (kbd "<tab>") 'org-cycle)
  (define-key nov-mode-map (kbd "S-<tab>") 'org-shifttab))

(with-eval-after-load' eww
  (define-key eww-mode-map (kbd "<tab>") 'org-cycle)
  (define-key eww-mode-map (kbd "S-<tab>") 'org-shifttab))
#+END_SRC

** Headline bullets (h1 to h6)
You can configure your farourite bullets up to 6 levels of headings (cycled
through if less than 6 bullets in setting).

You can set it with:
#+BEGIN_SRC emacs-lisp
(setq shrface-bullets-bullet-list '("◉" "○" "✸" "✿"))
#+END_SRC

PS: The bullets setting can be derived from =org-bullets-bullet-list= or
=org-superstar-headline-bullets-list=, if [[https://github.com/sabof/org-bullets][org-bullets]] or [[https://github.com/integral-dw/org-superstar-mode][org-superstar]] is
available.

** Item bullet
You can configure your favorite item bullet for shrface

You can set it with:
#+BEGIN_SRC emacs-lisp
(setq shrface-item-bullet "➤")
#+END_SRC

PS: Only one type of item bullet is supported, prettified by
=shrface-item-bullet-face=

** Paragraph indentation and fill column
You can configure the *paragraph* indentation (obsolete, default is 0, because the
indentation is managed by =org-indent-mode= started from version 1.6, but you can
still use it for more indentation spaces) and fill column for better reading
experience. These two settings is useful when you read =epub= files that have lots
of paragraphs, like novels.

You can set them with:
#+BEGIN_SRC emacs-lisp
(setq shrface-paragraph-indentation 0)
(setq shrface-paragraph-fill-column 120)
#+END_SRC

PS: The default setting is 0 and 120

** Supported faces
Here are the faces supported:
#+BEGIN_SRC emacs-lisp
(defcustom shrface-bullets-bullet-list
  (or (bound-and-true-p org-bullets-bullet-list)
      (bound-and-true-p org-superstar-headline-bullets-list)
      '("◉"
        "○"
        "✸"
        "✿"))
  "Bullets for headings"
  :group 'shrface
  :type '(repeat (string :tag "Bullet character")))

(defface shrface-href-face '((t :inherit org-link))
  "Face used for href"
  :group 'shrface-faces)

(defface shrface-h1-face '((t :inherit org-level-1))
  "Face used for h1 headlines."
  :group 'shrface-faces)

(defface shrface-h2-face '((t :inherit org-level-2))
  "Face used for h2 headlines."
  :group 'shrface-faces)

(defface shrface-h3-face '((t :inherit org-level-3))
  "Face used for h3 headlines."
  :group 'shrface-faces)

(defface shrface-h4-face  '((t :inherit org-level-4))
  "Face used for h4 headlines."
  :group 'shrface-faces)

(defface shrface-h5-face  '((t :inherit org-level-5))
  "Face used for h5 headlines."
  :group 'shrface-faces)

(defface shrface-h6-face '((t :inherit org-level-6))
  "Face used for h6 headlines."
  :group 'shrface-faces)

(defface shrface-verbatim '((t :inherit org-verbatim))
  "Face used for verbatim/emphasis."
  :group 'shrface-faces)

(defface shrface-item-bullet-face '((t :inherit org-list-dt))
  "Face used for unordered list bullet"
  :group 'shrface-faces)

#+END_SRC

** Experimental face(s)

#+BEGIN_SRC emacs-lisp
(defface shrface-code '((t :inherit org-code))
  "TODO Face used for inline code"
  :group 'shrface-faces)
#+END_SRC

*** Enable the =shrface-code=
=shrface-code= is disable by default, but you can add the following
statement to enable it:

#+BEGIN_SRC emacs-lisp
(add-to-list 'shr-external-rendering-functions '(code . shrface-tag-code))
#+END_SRC

*** Important notes on experimental faces
Please notice, =shrface-code= is an experimental face, which may make =eww= hangup
at some specific websites (not all). However, it work perfectly with local html files
during testing with =dash-docs= or =nov.el=

For example, browse =eww= with
[[https://github.com/chenyanming/shrface]]

=eww= still keep connecting to the remote which sometimes
will trigger a loop, the only solution so far is after loading the page,
list all connections through

#+BEGIN_SRC emacs-lisp
M-x list-processes
#+END_SRC

then press "d" to kill the connections before the hangup.

Welcome test and report.

** (Optional) Enable source codes highlight
You can install [[https://github.com/xuchunyang/shr-tag-pre-highlight.el][shr-tag-pre-highlight.el]] to enable source codes highlight

#+BEGIN_SRC emacs-lisp
(use-package shr-tag-pre-highlight
  :ensure t
  :after shr
  :config
  (add-to-list 'shr-external-rendering-functions
               '(pre . shr-tag-pre-highlight))
  (when (version< emacs-version "26")
    (with-eval-after-load 'eww
      (advice-add 'eww-display-html :around
                  'eww-display-html--override-shr-external-rendering-functions))))
#+END_SRC

*** Hacking the =shr-tag-pre-highlight.el=

If you want to add indentation and =#+BEGIN_SRC lang=, and =#+END_SRC= for later easy copying to
org-files, you can overwrite the function as following:


#+BEGIN_SRC emacs-lisp
(require 'shr-tag-pre-highlight)
(add-to-list 'shr-external-rendering-functions '(pre . shrface-shr-tag-pre-highlight))
(defun shrface-shr-tag-pre-highlight (pre)
    "Highlighting code in PRE."
    (let* ((shr-folding-mode 'none)
           (shr-current-font 'default)
           (code (with-temp-buffer
                   (shr-generic pre)
                   (setq-local fill-column 120)
                   (indent-rigidly (point-min) (point-max) 2)
                   (if (eq "" (dom-texts pre))
                       nil
                     (progn
                       (setq-local fill-column shrface-paragraph-fill-column)
                       (indent-rigidly (point-min) (point-max) shrface-paragraph-indentation)))
                   (buffer-string)))
           (lang (or (shr-tag-pre-highlight-guess-language-attr pre)
                     (let ((sym (language-detection-string code)))
                       (and sym (symbol-name sym)))))
           (mode (and lang
                      (shr-tag-pre-highlight--get-lang-mode lang))))
      (shr-ensure-newline)
      (insert (make-string shrface-paragraph-indentation ?\ )) ; make indent string
      (insert (propertize (concat "#+BEGIN_SRC " lang) 'face 'org-block-begin-line))
      (shr-ensure-newline)
      (insert
       (or (and (fboundp mode)
                (with-demoted-errors "Error while fontifying: %S"
                  (shr-tag-pre-highlight-fontify code mode)))
           code))
      (shr-ensure-newline)
      (insert (make-string shrface-paragraph-indentation ?\ )) ; make indent string
      (insert (propertize "#+END_SRC" 'face 'org-block-end-line ) )
      (shr-ensure-newline)))
#+END_SRC

Since the package has not been updated a while, sometimes a wrong language is
detected, but it is still great for highlight, even just for eye pleasing.

If you found the wrong detection is annoying, delete =lang= just like below statement:

#+BEGIN_SRC emacs-lisp
(insert (propertize (concat "#+BEGIN_SRC" ) 'face 'org-block-begin-line))
#+END_SRC

**** Screenshots when both enable =shrface= and the code highlights
#+html: <p align="center"><img src="img/code-highlight-1.png" width="80%"/></p>
#+html: <p align="center"><img src="img/code-highlight-2.png" width="80%"/></p>

* TODO TODO
- [ ] =shrface-code=
- [ ] =shrface-highlight=
- [ ] =shrface-todo=
- [ ] =shrface-babel=
 
* News/Logs
** =2020-04-17=
Version *1.7*:
- New feature:  =shrface-item-bullet=
- New face:  =shrface-item-bullet-face=

Version *1.6*:
- New feature:  =org-indent-mode= support (Enabled by default)

** =2020-04-16=
Version *1.5*:
- New feature: =outline minior mode= support (Enabled by default, but not the keybindings)

** =2020-04-15=
Version *1.4*:
- New feature: =imenu= support

** =2020-04-13=
Version *1.3*:
- New face: =shrface-code= (Experimental face, disabled by default)

** =2020-04-12=
Version *1.2*:
- New face: =shrface-verbatim=

** =2020-04-11=
Version *1.1*:
- Fixed bug: Wrong indentation handling make some items in paragraph disappear
  (such as images)

** =2020-04-10=
Version *1.0*:
- New face: =shrface-bullets-bullet-list=
- New face: =shrface-h1-face=
- New face: =shrface-h2-face=
- New face: =shrface-h3-face=
- New face: =shrface-h4-face=
- New face: =shrface-h5-face=
- New face: =shrface-h6-face=
- New face: =shrface-h6-face=
- New face: =shrface-href-face=
- New customizable variable: =shrface-paragraph-indentation=
- New customizable variable: =shrface-paragraph-fill-column=
